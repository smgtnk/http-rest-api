1. mkdir http-rest-api
2. go mod init github.com/smgtnk/http-rest-api
3. cmd/apiserver/main.go
4. makefile
4. internal/app/apiserver/apiserver.go
5. configs/apiserver.toml
6. go get github.com/BurntSushi/toml@latest - парсер toml конфигов
7......
8. go build -v ./cmd/apiserver(собрали exe)
9. ./apiserver -help (вызвали help )
  -config-path string
        path to config file (default "configs/apiserver.toml")

./apiserver -config-path config.toml (запуск бинарника с отсутствующим конфигом) 
10. go get github.com/sirupsen/logrus - логгер
11. go get -u github.com/gorilla/mux

go build -v ./cmd/apiserver(собрали exe)
./apiserver -запустили

12. go get github.com/stretchr/testify

13. go get github.com/lib/pq - postgres

14. make; ./apiserver

psql -U имя_пользователя
password
create database restapi_dev;

scoop install migrate

go get -u -d github.com/golang-migrate/migrate/cmd/migrate

migrate create -ext sql -dir migrations create_users
migrate -path migrations -database "postgres://localhost/restapi_dev?sslmode=disable&user=postgres&password=123" up

psql -U postgres -d restapi_dev
\dt
\d users

go get golang.org/x/crypto

go get github.com/go-ozzo/ozzo-validation
go get github.com/go-ozzo/ozzo-validation/is